!function(){"use strict";class e{constructor(e,t,s){this._name=e.name,this._link=e.url,this._cardSelector=t,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".el__element").cloneNode(!0)}_setEventListeners(){this._likeButton=this._element.querySelector(".element__like-button"),this._deleteButton=this._element.querySelector(".element__delete-button"),this._likeButton.addEventListener("click",(()=>{this._likeButton.classList.toggle("element__like-button_active")})),this._deleteButton.addEventListener("click",(()=>{this._element.remove()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}generateCard(){return this._element=this._getTemplate(),this._element.querySelector(".element__text").textContent=this._name,this._cardImage=this._element.querySelector(".element__img"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this._element}}class t{constructor(e,t){this._settings=e,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector)}_showInputError(e,t){const s=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._settings.inputErrorClass),s.textContent=t,s.classList.add(this._settings.errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._settings.inputErrorClass),t.textContent="",t.classList.remove(this._settings.errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_toggleButtonState(){this._inputList.some((e=>!e.validity.valid))?this.disableButton(!0):(this._submitButton.classList.remove(this._settings.inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}disableButton(){this._submitButton.classList.contains(this._settings.inactiveButtonClass)||(this._submitButton.classList.add(this._settings.inactiveButtonClass),this._submitButton.disabled=!0)}}class s{constructor(e,t){this._userName=e,this._userJob=t}setUserInfo(e){let{name:t,job:s}=e;this._userName.textContent=t,this._userJob.textContent=s}getUserInfo(){return{name:this._userName.textContent,job:this._userJob.textContent}}}const n=document.querySelector(".profile__title"),o=document.querySelector(".profile__descr"),i=document.querySelector("#element-add-modal"),r=i.querySelector("#element-add-form"),l=document.querySelector("#profile-edit-modal"),a=document.querySelector(".profile__edit-button"),u=document.querySelector("#title-input"),c=document.querySelector("#profile-input"),m=l.querySelector("#profile-edit-form"),d=(l.querySelector("#modal-profile-close-button"),document.querySelector(".profile__add-button")),_=(i.querySelector("#element-add-close"),document.querySelector(".elements__list")),h=(i.querySelector("#element-input"),i.querySelector("#image-input"),document.querySelector(".modal__button"),document.querySelector("#element-image-modal").querySelector("#element-image-close"),document.querySelector("#element-modal-image"),document.querySelector("#element-modal-caption"),{formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"}),p=[{name:"Yosemite Valley",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}];class g{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._parentContainer=t}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._parentContainer.prepend(e)}}class E{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._popupElement||console.error(`Element with selector ${t} not found!`)}open(){console.log("popup opened!"),this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){console.log("popup closed!"),this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close(e.currentTarget)}))}_handleEscClose(e){"Escape"===e.key&&(console.log("Popup closed via Escape Button!"),this.close())}}class S extends E{constructor(e,t){super({popupSelector:e}),this._formElement=this._popupElement.querySelector(".modal__form"),this._formInputs=this._formElement.querySelectorAll(".modal__input"),this._handleFormSubmit=t}close(){super.close()}_getInputValues(){const e={};return this._formInputs.forEach((t=>{e[t.name]=t.value})),e}_submitForm=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._formElement.reset()};setEventListeners(){super.setEventListeners(),this._formElement.addEventListener("submit",this._submitForm)}}class f extends E{constructor(e){super({popupSelector:e}),this._imageTitle=this._popupElement.querySelector(".modal__caption-element"),this._imageModalView=this._popupElement.querySelector(".modal__image-element")}open(e,t){this._imageModalView.src=t,this._imageModalView.alt=e,this._imageTitle.textContent=e,super.open()}}document.addEventListener("DOMContentLoaded",(()=>{const i=new t(h,r),l=new t(h,m),E=new S("#profile-edit-modal",(function(e){const{name:t,job:s}=e;L.setUserInfo({name:t,job:s}),E.close()})),v=new S("#element-add-modal",(function(e){const{title:t,url:s}=e,n=w({name:t,url:s});b.addItem(n),v.close(),i.disableButton()})),y=new f("#element-image-modal"),b=new g({items:p,renderer:e=>{const t=w(e);b.addItem(t)}},_),L=new s(n,o);function q(e,t){y.open(e,t)}function w(t){return new e(t,"#element-template",q).generateCard()}b.renderItems(),a.addEventListener("click",(()=>{const{name:e,job:t}=L.getUserInfo();u.value=e,c.value=t,E.open(),l.resetValidation()})),d.addEventListener("click",(()=>{v.open()})),l.enableValidation(),i.enableValidation(),E.setEventListeners(),y.setEventListeners(),v.setEventListeners()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWFDLEdBdUIzQyxTQUFTdUUsRUFBcUJoQixFQUFTQyxHQUNyQ1ksRUFBZXBDLEtBQUt1QixFQUFTQyxFQUMvQixDQUVBLFNBQVNVLEVBQVdHLEdBQ2xCLE9BQU8sSUFBSWpKLEVBQ1RpSixFQUNBLG9CQUNBRSxHQUNBekgsY0FDSixDQS9CQXFILEVBQVEvQyxjQWlDUmhCLEVBQWtCM0QsaUJBQWlCLFNBQVMsS0FDMUMsTUFBTSxLQUFFZCxFQUFJLElBQUVrRSxHQUFRZ0UsRUFBUy9ELGNBRS9CTyxFQUFrQjRDLE1BQVF0SCxFQUMxQjJFLEVBQXdCMkMsTUFBUXBELEVBRWhDOEQsRUFBaUIzQixPQUNqQjBCLEVBQXFCdEUsaUJBQWlCLElBR3hDb0IsRUFBaUIvRCxpQkFBaUIsU0FBUyxLQUN6Q3FILEVBQWdCOUIsTUFBTSxJQUd4QjBCLEVBQXFCekUsbUJBQ3JCd0UsRUFBa0J4RSxtQkFFbEIwRSxFQUFpQnZCLG9CQUNqQmdDLEVBQWVoQyxvQkFDZjBCLEVBQWdCMUIsbUJBQW1CLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLW1haW4vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMtbWFpbi8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy1tYWluLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy1tYWluLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLW1haW4vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMtbWFpbi8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMtbWFpbi8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy1tYWluLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy1tYWluLy4vc3JjL3BhZ2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xyXG4gIGNvbnN0cnVjdG9yKGRhdGEsIGNhcmRTZWxlY3RvciwgaGFuZGxlSW1hZ2VDbGljaykge1xyXG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcclxuICAgIHRoaXMuX2xpbmsgPSBkYXRhLnVybDtcclxuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcclxuICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sgPSBoYW5kbGVJbWFnZUNsaWNrO1xyXG4gIH1cclxuXHJcbiAgX2dldFRlbXBsYXRlKCkge1xyXG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudFxyXG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpXHJcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxfX2VsZW1lbnRcIilcclxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcclxuICAgIHJldHVybiBjYXJkRWxlbWVudDtcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9fbGlrZS1idXR0b25cIik7XHJcbiAgICB0aGlzLl9kZWxldGVCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIFwiLmVsZW1lbnRfX2RlbGV0ZS1idXR0b25cIlxyXG4gICAgKTtcclxuXHJcbiAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnRvZ2dsZShcImVsZW1lbnRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sodGhpcy5fbmFtZSwgdGhpcy5fbGluayk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGdlbmVyYXRlQ2FyZCgpIHtcclxuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xyXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX3RleHRcIikudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xyXG4gICAgdGhpcy5fY2FyZEltYWdlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2ltZ1wiKTtcclxuICAgIFxyXG4gICAgdGhpcy5fY2FyZEltYWdlLnNyYyA9IHRoaXMuX2xpbms7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWx0ID0gdGhpcy5fbmFtZTtcclxuXHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xyXG4gIH1cclxufSIsIlxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gIGNvbnN0cnVjdG9yKHNldHRpbmdzLCBmb3JtRWxlbWVudCkge1xuICAgIHRoaXMuX3NldHRpbmdzID0gc2V0dGluZ3M7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtRWxlbWVudDtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKFxuICAgICAgdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9zZXR0aW5ncy5pbnB1dFNlbGVjdG9yKVxuICAgICk7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIHRoaXMuX3NldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yXG4gICAgKTtcbiAgfVxuXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGVycm9yTWVzc2FnZSkge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmBcbiAgICApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX3NldHRpbmdzLmlucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX3NldHRpbmdzLmVycm9yQ2xhc3MpO1xuICB9XG5cbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmBcbiAgICApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3NldHRpbmdzLmlucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9zZXR0aW5ncy5lcnJvckNsYXNzKTtcbiAgfVxuXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KSB7XG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9XG4gIH1cblxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XG4gICAgY29uc3QgaGFzSW52YWxpZElucHV0ID0gdGhpcy5faW5wdXRMaXN0LnNvbWUoXG4gICAgICAoaW5wdXRFbGVtZW50KSA9PiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkXG4gICAgKTtcblxuICAgIGlmIChoYXNJbnZhbGlkSW5wdXQpIHtcbiAgICAgIHRoaXMuZGlzYWJsZUJ1dHRvbih0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcblxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0pO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cblxuICByZXNldFZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9KTtcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuICB9XG5cbiAgZGlzYWJsZUJ1dHRvbigpIHtcbiAgICBpZiAoIXRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuY29udGFpbnModGhpcy5fc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcykpIHtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX3NldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgICB9XG4gIH1cbn1cbiIsIlxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgICBjb25zdHJ1Y3RvcihuYW1lRWxlbWVudCwgam9iRWxlbWVudCkge1xyXG4gICAgICAgIHRoaXMuX3VzZXJOYW1lID0gbmFtZUVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy5fdXNlckpvYiA9IGpvYkVsZW1lbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0VXNlckluZm8oeyBuYW1lLCBqb2IgfSkge1xyXG4gICAgICAgIHRoaXMuX3VzZXJOYW1lLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgICAgICB0aGlzLl91c2VySm9iLnRleHRDb250ZW50ID0gam9iO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFVzZXJJbmZvKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG5hbWU6IHRoaXMuX3VzZXJOYW1lLnRleHRDb250ZW50LFxyXG4gICAgICAgICAgICBqb2I6IHRoaXMuX3VzZXJKb2IudGV4dENvbnRlbnRcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59IiwiXHJcbmV4cG9ydCBjb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX190aXRsZScpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUpvYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19kZXNjcicpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGVsZW1lbnRBZGRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZWxlbWVudC1hZGQtbW9kYWxcIik7XHJcbmV4cG9ydCBjb25zdCBlbGVtZW50QWRkRm9ybSA9IGVsZW1lbnRBZGRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI2VsZW1lbnQtYWRkLWZvcm1cIik7XHJcblxyXG5leHBvcnQgY29uc3QgcHJvZmlsZUVkaXRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LW1vZGFsXCIpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2VkaXQtYnV0dG9uXCIpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZVRpdGxlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3RpdGxlLWlucHV0XCIpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtaW5wdXRcIik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlRWRpdEZvcm0gPSBwcm9maWxlRWRpdE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LWZvcm1cIik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlTW9kYWxDbG9zZUJ1dHRvbiA9IHByb2ZpbGVFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIiNtb2RhbC1wcm9maWxlLWNsb3NlLWJ1dHRvblwiKTtcclxuXHJcbmV4cG9ydCBjb25zdCBlbGVtZW50QWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xyXG5leHBvcnQgY29uc3QgZWxlbWVudENsb3NlQnV0dG9uID0gZWxlbWVudEFkZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIjZWxlbWVudC1hZGQtY2xvc2VcIik7XHJcblxyXG5leHBvcnQgY29uc3QgZWxlbWVudExpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzX19saXN0XCIpO1xyXG5leHBvcnQgY29uc3QgZWxOYW1lSW5wdXQgPSBlbGVtZW50QWRkTW9kYWwucXVlcnlTZWxlY3RvcihcIiNlbGVtZW50LWlucHV0XCIpO1xyXG5leHBvcnQgY29uc3QgZWxVcmxJbnB1dCA9IGVsZW1lbnRBZGRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI2ltYWdlLWlucHV0XCIpO1xyXG5leHBvcnQgY29uc3QgZWxNb2RhbEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2J1dHRvblwiKTtcclxuXHJcbmV4cG9ydCBjb25zdCBlbGVtZW50SW1hZ2VNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZWxlbWVudC1pbWFnZS1tb2RhbFwiKTtcclxuZXhwb3J0IGNvbnN0IGVsZW1lbnRJbWFnZU1vZGFsQ2xvc2VCdXR0b24gPSBlbGVtZW50SW1hZ2VNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI2VsZW1lbnQtaW1hZ2UtY2xvc2VcIik7XHJcbmV4cG9ydCBjb25zdCBtb2RhbEltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlbGVtZW50LW1vZGFsLWltYWdlXCIpO1xyXG5leHBvcnQgY29uc3QgbW9kYWxDYXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlbGVtZW50LW1vZGFsLWNhcHRpb25cIik7XHJcblxyXG5leHBvcnQgY29uc3QgY2FyZFNlbGVjdG9yID0gXCIjZWxlbWVudC10ZW1wbGF0ZVwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbmZpZ09iamVjdHMgPSB7XHJcbiAgICBmb3JtU2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtXCIsXHJcbiAgICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcclxuICAgIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5tb2RhbF9fYnV0dG9uXCIsXHJcbiAgICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19idXR0b25fZGlzYWJsZWRcIixcclxuICAgIGlucHV0RXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXRfdHlwZV9lcnJvclwiLFxyXG4gICAgZXJyb3JDbGFzczogXCJtb2RhbF9fZXJyb3JfdmlzaWJsZVwiLFxyXG4gIH07XHJcblxyXG5leHBvcnQgY29uc3QgaW5pdGlhbGl6ZUNhcmRzID0gW1xyXG4gICAge1xyXG4gICAgICBuYW1lOiBcIllvc2VtaXRlIFZhbGxleVwiLFxyXG4gICAgICB1cmw6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC95b3NlbWl0ZS5qcGdcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6IFwiTGFrZSBMb3Vpc2VcIixcclxuICAgICAgdXJsOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFrZS1sb3Vpc2UuanBnXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiBcIkJhbGQgTW91bnRhaW5zXCIsXHJcbiAgICAgIHVybDogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2JhbGQtbW91bnRhaW5zLmpwZ1wiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJMYXRlbWFyXCIsXHJcbiAgICAgIHVybDogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xhdGVtYXIuanBnXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiBcIlZhbm9pc2UgTmF0aW9uYWwgUGFya1wiLFxyXG4gICAgICB1cmw6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC92YW5vaXNlLmpwZ1wiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJMYWdvIGRpIEJyYWllc1wiLFxyXG4gICAgICB1cmw6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWdvLmpwZ1wiLFxyXG4gICAgfSxcclxuICBdO1xyXG4iLCJcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBwYXJlbnRDb250YWluZXIpIHtcclxuICAgICAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xyXG4gICAgICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICAgICAgdGhpcy5fcGFyZW50Q29udGFpbmVyID0gcGFyZW50Q29udGFpbmVyO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlckl0ZW1zKCkge1xyXG4gICAgICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkSXRlbShjaGlsZEVsZW1lbnQpIHtcclxuICAgICAgICB0aGlzLl9wYXJlbnRDb250YWluZXIucHJlcGVuZChjaGlsZEVsZW1lbnQpO1xyXG4gICAgfVxyXG59IiwiXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3RvciB9KSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XHJcblxyXG4gICAgICAgIGlmICghdGhpcy5fcG9wdXBFbGVtZW50KSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYEVsZW1lbnQgd2l0aCBzZWxlY3RvciAke3BvcHVwU2VsZWN0b3J9IG5vdCBmb3VuZCFgKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb3BlbigpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcInBvcHVwIG9wZW5lZCFcIik7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ21vZGFsX29wZW5lZCcpO1xyXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwicG9wdXAgY2xvc2VkIVwiKTtcclxuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnbW9kYWxfb3BlbmVkJyk7XHJcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnbW9kYWwnKSB8fFxyXG4gICAgICAgICAgICAgICAgZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnbW9kYWxfX2Nsb3NlJykpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIF9oYW5kbGVFc2NDbG9zZShldmVudCkge1xyXG4gICAgICAgIGlmIChldmVudC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJQb3B1cCBjbG9zZWQgdmlhIEVzY2FwZSBCdXR0b24hXCIpO1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuXHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCkge1xyXG4gICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xyXG5cclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XHJcbiAgICB0aGlzLl9mb3JtSW5wdXRzID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9faW5wdXRcIik7XHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgc3VwZXIuY2xvc2UoKTtcclxuICB9XHJcblxyXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcclxuICAgIGNvbnN0IHZhbHVlcyA9IHt9O1xyXG5cclxuICAgIHRoaXMuX2Zvcm1JbnB1dHMuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgdmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gdmFsdWVzO1xyXG4gIH1cclxuXHJcbiAgLy8gc2V0SW5wdXRWYWx1ZXMoZGF0YSkge1xyXG4gIC8vICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XHJcbiAgLy8gICAgIC8vIEhlcmUgeW91IGluc2VydCB0aGUgYHZhbHVlYCBieSB0aGUgYG5hbWVgIG9mIHRoZSBpbnB1dFxyXG4gIC8vICAgICBpbnB1dC52YWx1ZSA9IGRhdGFbaW5wdXQubmFtZV07XHJcbiAgLy8gICB9KTtcclxuICAvLyB9XHJcblxyXG5cclxuICBfc3VibWl0Rm9ybSA9IChldmVudCkgPT4ge1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIFxyXG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50LnJlc2V0KCk7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIHRoaXMuX3N1Ym1pdEZvcm0pO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5faW1hZ2VUaXRsZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2NhcHRpb24tZWxlbWVudCcpO1xyXG4gICAgICAgIHRoaXMuX2ltYWdlTW9kYWxWaWV3ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9faW1hZ2UtZWxlbWVudCcpO1xyXG4gICAgfVxyXG5cclxuICAgIG9wZW4oY2FwdGlvbiwgaW1hZ2VVcmwpIHtcclxuICAgICAgICB0aGlzLl9pbWFnZU1vZGFsVmlldy5zcmMgPSBpbWFnZVVybDtcclxuICAgICAgICB0aGlzLl9pbWFnZU1vZGFsVmlldy5hbHQgPSBjYXB0aW9uO1xyXG4gICAgICAgIHRoaXMuX2ltYWdlVGl0bGUudGV4dENvbnRlbnQgPSBjYXB0aW9uO1xyXG5cclxuICAgICAgICBzdXBlci5vcGVuKCk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcbmltcG9ydCBcIi4uL3BhZ2VzL2luZGV4LmNzc1wiO1xuaW1wb3J0IHtcbiAgcHJvZmlsZUpvYixcbiAgcHJvZmlsZU5hbWUsXG4gIGluaXRpYWxpemVDYXJkcyxcbiAgY29uZmlnT2JqZWN0cyxcbiAgcHJvZmlsZUVkaXRNb2RhbCxcbiAgcHJvZmlsZUVkaXRCdXR0b24sXG4gIHByb2ZpbGVUaXRsZUlucHV0LFxuICBwcm9maWxlRGVzY3JpcHRpb25JbnB1dCxcbiAgcHJvZmlsZUVkaXRGb3JtLFxuICBlbGVtZW50QWRkTW9kYWwsXG4gIGVsZW1lbnRBZGRCdXR0b24sXG4gIGVsZW1lbnRBZGRGb3JtLFxuICBlbGVtZW50TGlzdCxcbiAgZWxOYW1lSW5wdXQsXG4gIGVsVXJsSW5wdXQsXG4gIGVsZW1lbnRJbWFnZU1vZGFsLFxuICBjYXJkU2VsZWN0b3IsXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG4gIGNvbnN0IGNhcmRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnT2JqZWN0cywgZWxlbWVudEFkZEZvcm0pO1xuICBjb25zdCBwcm9maWxlRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxuICAgIGNvbmZpZ09iamVjdHMsXG4gICAgcHJvZmlsZUVkaXRGb3JtXG4gICk7XG5cbiAgY29uc3QgcHJvZmlsZUVkaXRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxuICAgIFwiI3Byb2ZpbGUtZWRpdC1tb2RhbFwiLFxuICAgIGhhbmRsZVByb2ZpbGVGb3JtU3VibWl0XG4gICk7XG5cbiAgY29uc3QgYWRkTmV3Q2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXG4gICAgXCIjZWxlbWVudC1hZGQtbW9kYWxcIixcbiAgICBoYW5kbGVOZXdDYXJkU3VibWl0XG4gICk7XG5cbiAgY29uc3QgY2FyZEltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjZWxlbWVudC1pbWFnZS1tb2RhbFwiKTtcblxuICBjb25zdCBzZWN0aW9uID0gbmV3IFNlY3Rpb24oXG4gICAge1xuICAgICAgaXRlbXM6IGluaXRpYWxpemVDYXJkcyxcbiAgICAgIHJlbmRlcmVyOiAoY2FyZERhdGEpID0+IHtcbiAgICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSByZW5kZXJDYXJkKGNhcmREYXRhKTtcbiAgICAgICAgc2VjdGlvbi5hZGRJdGVtKGNhcmRFbGVtZW50KTtcbiAgICAgIH0sXG4gICAgfSxcbiAgICBlbGVtZW50TGlzdFxuICApO1xuXG4gIGNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHByb2ZpbGVOYW1lLCBwcm9maWxlSm9iKTtcblxuICBzZWN0aW9uLnJlbmRlckl0ZW1zKCk7XG5cbiAgZnVuY3Rpb24gaGFuZGxlUHJvZmlsZUZvcm1TdWJtaXQocHJvZmlsZVZhbHVlcykge1xuICAgIGNvbnN0IHsgbmFtZSwgam9iIH0gPSBwcm9maWxlVmFsdWVzO1xuXG4gICAgdXNlckluZm8uc2V0VXNlckluZm8oe1xuICAgICAgbmFtZTogbmFtZSxcbiAgICAgIGpvYjogam9iLFxuICAgIH0pO1xuXG4gICAgcHJvZmlsZUVkaXRQb3B1cC5jbG9zZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlTmV3Q2FyZFN1Ym1pdChjYXJkVmFsdWVzKSB7XG4gICAgY29uc3QgeyB0aXRsZSwgdXJsIH0gPSBjYXJkVmFsdWVzO1xuICAgIGNvbnN0IG5ld0VsZW1lbnREYXRhID0gcmVuZGVyQ2FyZCh7IG5hbWU6IHRpdGxlLCB1cmw6IHVybCB9KTtcbiAgICBzZWN0aW9uLmFkZEl0ZW0obmV3RWxlbWVudERhdGEpO1xuICAgIGFkZE5ld0NhcmRQb3B1cC5jbG9zZSgpO1xuICAgIGNhcmRGb3JtVmFsaWRhdG9yLmRpc2FibGVCdXR0b24oKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUNhcmRJbWFnZUNsaWNrKGNhcHRpb24sIGltYWdlVXJsKSB7XG4gICAgY2FyZEltYWdlUG9wdXAub3BlbihjYXB0aW9uLCBpbWFnZVVybCk7XG4gIH1cblxuICBmdW5jdGlvbiByZW5kZXJDYXJkKGNhcmREYXRhKSB7XG4gICAgcmV0dXJuIG5ldyBDYXJkKFxuICAgICAgY2FyZERhdGEsXG4gICAgICBcIiNlbGVtZW50LXRlbXBsYXRlXCIsXG4gICAgICBoYW5kbGVDYXJkSW1hZ2VDbGlja1xuICAgICkuZ2VuZXJhdGVDYXJkKCk7XG4gIH1cblxuICBwcm9maWxlRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGNvbnN0IHsgbmFtZSwgam9iIH0gPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xuXG4gICAgcHJvZmlsZVRpdGxlSW5wdXQudmFsdWUgPSBuYW1lO1xuICAgIHByb2ZpbGVEZXNjcmlwdGlvbklucHV0LnZhbHVlID0gam9iO1xuXG4gICAgcHJvZmlsZUVkaXRQb3B1cC5vcGVuKCk7XG4gICAgcHJvZmlsZUZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XG4gIH0pO1xuXG4gIGVsZW1lbnRBZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBhZGROZXdDYXJkUG9wdXAub3BlbigpO1xuICB9KTtcblxuICBwcm9maWxlRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG4gIGNhcmRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcblxuICBwcm9maWxlRWRpdFBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gIGNhcmRJbWFnZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gIGFkZE5ld0NhcmRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xufSk7Il0sIm5hbWVzIjpbIkNhcmQiLCJjb25zdHJ1Y3RvciIsImRhdGEiLCJjYXJkU2VsZWN0b3IiLCJoYW5kbGVJbWFnZUNsaWNrIiwidGhpcyIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwidXJsIiwiX2NhcmRTZWxlY3RvciIsIl9oYW5kbGVJbWFnZUNsaWNrIiwiX2dldFRlbXBsYXRlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9saWtlQnV0dG9uIiwiX2VsZW1lbnQiLCJfZGVsZXRlQnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsYXNzTGlzdCIsInRvZ2dsZSIsInJlbW92ZSIsIl9jYXJkSW1hZ2UiLCJnZW5lcmF0ZUNhcmQiLCJ0ZXh0Q29udGVudCIsInNyYyIsImFsdCIsIkZvcm1WYWxpZGF0b3IiLCJzZXR0aW5ncyIsImZvcm1FbGVtZW50IiwiX3NldHRpbmdzIiwiX2Zvcm1FbGVtZW50IiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvbiIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX3Nob3dJbnB1dEVycm9yIiwiaW5wdXRFbGVtZW50IiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JFbGVtZW50IiwiaWQiLCJhZGQiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2hpZGVJbnB1dEVycm9yIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl90b2dnbGVCdXR0b25TdGF0ZSIsInNvbWUiLCJkaXNhYmxlQnV0dG9uIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImRpc2FibGVkIiwiZm9yRWFjaCIsImVuYWJsZVZhbGlkYXRpb24iLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsInJlc2V0VmFsaWRhdGlvbiIsImNvbnRhaW5zIiwiVXNlckluZm8iLCJuYW1lRWxlbWVudCIsImpvYkVsZW1lbnQiLCJfdXNlck5hbWUiLCJfdXNlckpvYiIsInNldFVzZXJJbmZvIiwiX3JlZiIsImpvYiIsImdldFVzZXJJbmZvIiwicHJvZmlsZU5hbWUiLCJwcm9maWxlSm9iIiwiZWxlbWVudEFkZE1vZGFsIiwiZWxlbWVudEFkZEZvcm0iLCJwcm9maWxlRWRpdE1vZGFsIiwicHJvZmlsZUVkaXRCdXR0b24iLCJwcm9maWxlVGl0bGVJbnB1dCIsInByb2ZpbGVEZXNjcmlwdGlvbklucHV0IiwicHJvZmlsZUVkaXRGb3JtIiwiZWxlbWVudEFkZEJ1dHRvbiIsImVsZW1lbnRMaXN0IiwiY29uZmlnT2JqZWN0cyIsImZvcm1TZWxlY3RvciIsImluaXRpYWxpemVDYXJkcyIsIlNlY3Rpb24iLCJwYXJlbnRDb250YWluZXIiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX3BhcmVudENvbnRhaW5lciIsInJlbmRlckl0ZW1zIiwiaXRlbSIsImFkZEl0ZW0iLCJjaGlsZEVsZW1lbnQiLCJwcmVwZW5kIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwRWxlbWVudCIsIl9oYW5kbGVFc2NDbG9zZSIsImJpbmQiLCJjb25zb2xlIiwiZXJyb3IiLCJvcGVuIiwibG9nIiwiY2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJldmVudCIsInRhcmdldCIsImN1cnJlbnRUYXJnZXQiLCJrZXkiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsInN1cGVyIiwiX2Zvcm1JbnB1dHMiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9nZXRJbnB1dFZhbHVlcyIsInZhbHVlcyIsImlucHV0IiwidmFsdWUiLCJfc3VibWl0Rm9ybSIsInJlc2V0IiwiUG9wdXBXaXRoSW1hZ2UiLCJfaW1hZ2VUaXRsZSIsIl9pbWFnZU1vZGFsVmlldyIsImNhcHRpb24iLCJpbWFnZVVybCIsImNhcmRGb3JtVmFsaWRhdG9yIiwicHJvZmlsZUZvcm1WYWxpZGF0b3IiLCJwcm9maWxlRWRpdFBvcHVwIiwicHJvZmlsZVZhbHVlcyIsInVzZXJJbmZvIiwiYWRkTmV3Q2FyZFBvcHVwIiwiY2FyZFZhbHVlcyIsInRpdGxlIiwibmV3RWxlbWVudERhdGEiLCJyZW5kZXJDYXJkIiwic2VjdGlvbiIsImNhcmRJbWFnZVBvcHVwIiwiY2FyZERhdGEiLCJjYXJkRWxlbWVudCIsImhhbmRsZUNhcmRJbWFnZUNsaWNrIl0sInNvdXJjZVJvb3QiOiIifQ==